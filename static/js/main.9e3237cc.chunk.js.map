{"version":3,"sources":["components/DigitalTimer/index.js","App.js","index.js"],"names":["DigitalTimer","_Component","props","_this","_classCallCheck","_callSuper","clearTimerInterval","clearInterval","timerID","toReset","setState","minutes","isTimerStarted","seconds","increseTimeElapsedInSeconds","_this$state","state","prevState","toStopOrRun","_this$state2","setInterval","getTimeFormat","_this$state3","remainingSeconds","minute","Math","floor","second","stringMinutes","concat","stringSeconds","toPlus","tominus","_inherits","_createClass","key","value","this","_this$state4","details","statuss","text","alt","runningimg","isDisabled","_jsxs","className","children","_jsx","src","onClick","disabled","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e3237cc.chunk.js","sourcesContent":["// Write your code here\nimport './index.css'\nimport {Component} from 'react'\n\nclass DigitalTimer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {minutes: 25, seconds: 0, isTimerStarted: false}\n  }\n\n  /* componentDidMount() {\n    this.timerID = setInterval(this.tick, 1000)\n  }\n \n   tick = () => {\n    this.setState({\n     timer:timer\n    })\n  } */\n  componentWillUnmount() {\n    this.clearTimerInterval()\n  }\n\n  clearTimerInterval = () => {\n    clearInterval(this.timerID)\n  }\n\n  toReset = () => {\n    this.clearTimerInterval()\n    this.setState({\n      minutes: 25,\n      isTimerStarted: false,\n      seconds: 0,\n    })\n  }\n\n  increseTimeElapsedInSeconds = () => {\n    const {minutes, seconds} = this.state\n    const isTimeCompleted = seconds === minutes * 60\n\n    if (isTimeCompleted) {\n      this.clearTimerInterval()\n      this.setState({isTimerStarted: false})\n    } else {\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1,\n      }))\n    }\n  }\n\n  toStopOrRun = () => {\n    const {minutes, seconds, isTimerStarted} = this.state\n    const isTimeCompleted = seconds === minutes * 60\n    if (isTimeCompleted) {\n      this.setState({seconds: 0})\n    }\n    if (isTimerStarted) {\n      this.clearTimerInterval()\n    } else {\n      this.timerID = setInterval(this.increseTimeElapsedInSeconds, 1000)\n    }\n    this.setState(prevState => ({\n      isTimerStarted: !prevState.isTimerStarted,\n    }))\n  }\n\n  getTimeFormat = () => {\n    const {minutes, seconds} = this.state\n    const remainingSeconds = minutes * 60 - seconds\n    const minute = Math.floor(remainingSeconds / 60)\n    const second = Math.floor(remainingSeconds % 60)\n    const stringMinutes = minute > 9 ? minute : `0${minute}`\n    const stringSeconds = second > 9 ? second : `0${second}`\n\n    return `${stringMinutes}:${stringSeconds}`\n  }\n\n  toPlus = () => {\n    this.setState(prevState => ({\n      minutes: prevState.minutes + 1,\n    }))\n  }\n\n  tominus = () => {\n    const {minutes} = this.state\n    if (minutes > 1) {\n      this.setState(prevState => ({\n        minutes: prevState.minutes - 1,\n      }))\n    }\n  }\n\n  render() {\n    const {minutes, seconds, isTimerStarted} = this.state\n    const details = isTimerStarted\n      ? {\n          statuss: 'Running',\n          text: 'Pause',\n          alt: 'pause icon',\n          runningimg:\n            'https://assets.ccbp.in/frontend/react-js/pause-icon-img.png',\n        }\n      : {\n          statuss: 'Paused',\n          text: 'Start',\n          alt: 'play icon',\n          runningimg:\n            'https://assets.ccbp.in/frontend/react-js/play-icon-img.png',\n        }\n    const {runningimg, alt, statuss, text} = details\n    const isDisabled = seconds > 0\n    return (\n      <div className=\"main_container\">\n        <h1 className=\"heading\">Digital Timer</h1>\n        <div className=\"sub_container\">\n          <div className=\"div_1\">\n            <div className=\"div_1_1\">\n              <h1 className=\"timer_1\">{this.getTimeFormat()}</h1>\n              <p className=\"p1\">{statuss}</p>\n            </div>\n          </div>\n          <div className=\"div_2\">\n            <div className=\"div_2_1\">\n              <img className=\"Running_img\" src={runningimg} alt={alt} />\n              <button onClick={this.toStopOrRun}>\n                <h1 className=\"running_heading\">{text}</h1>\n              </button>\n              <img\n                className=\"reset_img\"\n                alt=\"reset icon\"\n                src=\"https://assets.ccbp.in/frontend/react-js/reset-icon-img.png\"\n              />\n              <button onClick={this.toReset}>\n                <h1 className=\"reset\">Reset</h1>\n              </button>\n            </div>\n            <p>Set Timer limit</p>\n            <div className=\"div_2_2_2\">\n              <button\n                disabled={isDisabled}\n                className=\"minus_button\"\n                onClick={this.tominus}\n              >\n                -\n              </button>\n              <div className=\"timer_2\">\n                {' '}\n                <p className=\"timer_h\">{minutes}</p>\n              </div>\n              <button\n                disabled={isDisabled}\n                className=\"plus_button\"\n                onClick={this.toPlus}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DigitalTimer\n","import DigitalTimer from './components/DigitalTimer'\n\nimport './App.css'\n\nconst App = () => <DigitalTimer />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}